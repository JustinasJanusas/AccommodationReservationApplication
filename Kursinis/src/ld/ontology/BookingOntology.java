// file: BookingOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ld.ontology;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: BookingOntology.java
 * @author ontology bean generator
 * @version 2022/05/28, 17:17:02
 */
public class BookingOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = -4228915551888134581L;

  //NAME
  public static final String ONTOLOGY_NAME = "Booking";
  // The singleton instance of this ontology
  private static Ontology theInstance = new BookingOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String SEARCHMSG_ENDDATE="endDate";
    public static final String SEARCHMSG_AMOUNTOFPEOPLE="amountOfPeople";
    public static final String SEARCHMSG_STARTDATE="startDate";
    public static final String SEARCHMSG_MSGID="msgID";
    public static final String SEARCHMSG_CITYNAME="cityName";
    public static final String SEARCHMSG_COUNTRYNAME="countryName";
    public static final String SEARCHMSG="SearchMSG";
    public static final String CANCELRESERVATIONMSG_ENDDATE="endDate";
    public static final String CANCELRESERVATIONMSG_APID="apID";
    public static final String CANCELRESERVATIONMSG_STARTDATE="startDate";
    public static final String CANCELRESERVATIONMSG="CancelReservationMSG";
    public static final String BOOKRESPONSEMSG_MSGID="msgID";
    public static final String BOOKRESPONSEMSG_RESERVATIONSUCCESSFUL="reservationSuccessful";
    public static final String BOOKRESPONSEMSG="BookResponseMSG";
    public static final String SEARCHRESPONSEMSG_APARTMENTS="apartments";
    public static final String SEARCHRESPONSEMSG_MSGID="msgID";
    public static final String SEARCHRESPONSEMSG="SearchResponseMSG";
    public static final String BOOKMSG_ENDDATE="endDate";
    public static final String BOOKMSG_APID="apID";
    public static final String BOOKMSG_STARTDATE="startDate";
    public static final String BOOKMSG_MSGID="msgID";
    public static final String BOOKMSG="BookMSG";
    public static final String RESERVATION_ENDDATE="endDate";
    public static final String RESERVATION_STARTDATE="startDate";
    public static final String RESERVATION_AGENTNAME="agentName";
    public static final String RESERVATION="Reservation";
    public static final String APARTMENT_PRICE="price";
    public static final String APARTMENT_CITY="city";
    public static final String APARTMENT_APID="apID";
    public static final String APARTMENT_ADDRESS="address";
    public static final String APARTMENT_AMOUNTOFPEOPLE="amountOfPeople";
    public static final String APARTMENT_COUNTRY="country";
    public static final String APARTMENT_NAME="name";
    public static final String APARTMENT_DESCRIPTION="description";
    public static final String APARTMENT_RESERVATIONS="reservations";
    public static final String APARTMENT_COMPANY="company";
    public static final String APARTMENT="Apartment";

  /**
   * Constructor
  */
  private BookingOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema apartmentSchema = new ConceptSchema(APARTMENT);
    add(apartmentSchema, ld.ontology.Apartment.class);
    ConceptSchema reservationSchema = new ConceptSchema(RESERVATION);
    add(reservationSchema, ld.ontology.Reservation.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema bookMSGSchema = new PredicateSchema(BOOKMSG);
    add(bookMSGSchema, ld.ontology.BookMSG.class);
    PredicateSchema searchResponseMSGSchema = new PredicateSchema(SEARCHRESPONSEMSG);
    add(searchResponseMSGSchema, ld.ontology.SearchResponseMSG.class);
    PredicateSchema bookResponseMSGSchema = new PredicateSchema(BOOKRESPONSEMSG);
    add(bookResponseMSGSchema, ld.ontology.BookResponseMSG.class);
    PredicateSchema cancelReservationMSGSchema = new PredicateSchema(CANCELRESERVATIONMSG);
    add(cancelReservationMSGSchema, ld.ontology.CancelReservationMSG.class);
    PredicateSchema searchMSGSchema = new PredicateSchema(SEARCHMSG);
    add(searchMSGSchema, ld.ontology.SearchMSG.class);


    // adding fields
    apartmentSchema.add(APARTMENT_COMPANY, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_RESERVATIONS, reservationSchema, 0, ObjectSchema.UNLIMITED);
    apartmentSchema.add(APARTMENT_DESCRIPTION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    apartmentSchema.add(APARTMENT_NAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_COUNTRY, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_AMOUNTOFPEOPLE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_ADDRESS, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_APID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_CITY, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    apartmentSchema.add(APARTMENT_PRICE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.MANDATORY);
    reservationSchema.add(RESERVATION_AGENTNAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    reservationSchema.add(RESERVATION_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    reservationSchema.add(RESERVATION_ENDDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    bookMSGSchema.add(BOOKMSG_MSGID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    bookMSGSchema.add(BOOKMSG_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    bookMSGSchema.add(BOOKMSG_APID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    bookMSGSchema.add(BOOKMSG_ENDDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchResponseMSGSchema.add(SEARCHRESPONSEMSG_MSGID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchResponseMSGSchema.add(SEARCHRESPONSEMSG_APARTMENTS, apartmentSchema, 0, ObjectSchema.UNLIMITED);
    bookResponseMSGSchema.add(BOOKRESPONSEMSG_RESERVATIONSUCCESSFUL, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.MANDATORY);
    bookResponseMSGSchema.add(BOOKRESPONSEMSG_MSGID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    cancelReservationMSGSchema.add(CANCELRESERVATIONMSG_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    cancelReservationMSGSchema.add(CANCELRESERVATIONMSG_APID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    cancelReservationMSGSchema.add(CANCELRESERVATIONMSG_ENDDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_COUNTRYNAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_CITYNAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_MSGID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_STARTDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_AMOUNTOFPEOPLE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    searchMSGSchema.add(SEARCHMSG_ENDDATE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
